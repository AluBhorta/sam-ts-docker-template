AWSTemplateFormatVersion: '2010-09-09'
  
Transform: AWS::Serverless-2016-10-31

Parameters:
  ImageName:
    Description: "Tag of the docker image used"
    Type: String
    Default: my-node-lambda
  ImageTag:
    Description: "Tag of the docker image used"
    Type: String
    Default: latest
  ImageArchitecture:
    Description: "Architecture of the docker image: arm64 or x86_64"
    Type: String
    Default: arm64
  GitHubOrg:
    Type: String
    Default: AluBhorta
    Description: "Name of the Github user/org."
  GitHubRepoName:
    Type: String
    Default: sam-docker-node-lambda
    Description: "Name of the Github repo."

Resources:
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}:${ImageTag}"
      MemorySize: 128
      Timeout: 30
      Architectures: 
        - !Ref ImageArchitecture
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /hello
            Method: get
        PostResource:
          Type: Api
          Properties:
            Path: /hello
            Method: post

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1

  IAMRoleForPipeline:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GithubOidc
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${GitHubRepoName}:*
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

Outputs:
  ApiEndpoint:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello"
    Description: URL for the API endpoint
  IAMRoleForPipeline:
    Value: !GetAtt [IAMRoleForPipeline, Arn]
    Description: "The ARN of the IAM Role that will be used by Github Actions for CI/CD. Copy it, and add it as a secret named 'PIPELINE_IAM_ROLE' to your Github repo."
